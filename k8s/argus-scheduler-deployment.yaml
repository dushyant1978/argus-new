apiVersion: apps/v1
kind: Deployment
metadata:
  name: argus-scheduler
  namespace: argus
  labels:
    app: argus-scheduler
    component: ui-scheduler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: argus-scheduler
  template:
    metadata:
      labels:
        app: argus-scheduler
        component: ui-scheduler
    spec:
      containers:
      - name: argus-scheduler
        image: argus/argus-scheduler:1.0.0
        ports:
        - containerPort: 8081
          name: http
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "kubernetes"
        - name: ARGUS_CORE_URL
          value: "http://argus-core-service:8080"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: http
          initialDelaySeconds: 20
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
          readOnly: true
      volumes:
      - name: config-volume
        configMap:
          name: argus-scheduler-config
---
apiVersion: v1
kind: Service
metadata:
  name: argus-scheduler-service
  namespace: argus
  labels:
    app: argus-scheduler
spec:
  selector:
    app: argus-scheduler
  ports:
  - port: 8081
    targetPort: http
    protocol: TCP
    name: http
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: argus-scheduler-config
  namespace: argus
data:
  application-kubernetes.yml: |
    server:
      port: 8081
    spring:
      application:
        name: argus-ui-scheduler
      datasource:
        url: jdbc:h2:file:/app/data/argusdb
        driver-class-name: org.h2.Driver
        username: sa
        password: password
      jpa:
        hibernate:
          ddl-auto: update
        show-sql: false
      h2:
        console:
          enabled: false
    argus:
      core:
        url: http://argus-core-service:8080
      scheduler:
        cron: "0 0 */4 * * *"
        enabled: true
    management:
      endpoints:
        web:
          exposure:
            include: health,info,metrics,prometheus
      endpoint:
        health:
          show-details: always
    logging:
      level:
        com.argus: INFO
        root: INFO